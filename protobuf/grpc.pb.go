// Code generated by protoc-gen-go. DO NOT EDIT.
// source: grpc.proto

package dispatcher

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type DispatcherEvent_Type int32

const (
	DispatcherEvent_Subscribed       DispatcherEvent_Type = 0
	DispatcherEvent_Disconnected     DispatcherEvent_Type = 1
	DispatcherEvent_Ping             DispatcherEvent_Type = 2
	DispatcherEvent_LogRecord        DispatcherEvent_Type = 10
	DispatcherEvent_JobStart         DispatcherEvent_Type = 20
	DispatcherEvent_JobStop          DispatcherEvent_Type = 21
	DispatcherEvent_JobFinish        DispatcherEvent_Type = 22
	DispatcherEvent_JobConfiguration DispatcherEvent_Type = 29
	DispatcherEvent_StatsCollection  DispatcherEvent_Type = 30
	DispatcherEvent_OccurError       DispatcherEvent_Type = 99
)

var DispatcherEvent_Type_name = map[int32]string{
	0:  "Subscribed",
	1:  "Disconnected",
	2:  "Ping",
	10: "LogRecord",
	20: "JobStart",
	21: "JobStop",
	22: "JobFinish",
	29: "JobConfiguration",
	30: "StatsCollection",
	99: "OccurError",
}
var DispatcherEvent_Type_value = map[string]int32{
	"Subscribed":       0,
	"Disconnected":     1,
	"Ping":             2,
	"LogRecord":        10,
	"JobStart":         20,
	"JobStop":          21,
	"JobFinish":        22,
	"JobConfiguration": 29,
	"StatsCollection":  30,
	"OccurError":       99,
}

func (x DispatcherEvent_Type) String() string {
	return proto.EnumName(DispatcherEvent_Type_name, int32(x))
}
func (DispatcherEvent_Type) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_grpc_5b93556e8a9d6ed7, []int{0, 0}
}

type DispatcherEvent struct {
	Type DispatcherEvent_Type `protobuf:"varint,1,opt,name=type,proto3,enum=dispatcher.DispatcherEvent_Type" json:"type,omitempty"`
	// Types that are valid to be assigned to Data:
	//	*DispatcherEvent_Log
	//	*DispatcherEvent_Job
	//	*DispatcherEvent_Stats
	Data                 isDispatcherEvent_Data `protobuf_oneof:"data"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *DispatcherEvent) Reset()         { *m = DispatcherEvent{} }
func (m *DispatcherEvent) String() string { return proto.CompactTextString(m) }
func (*DispatcherEvent) ProtoMessage()    {}
func (*DispatcherEvent) Descriptor() ([]byte, []int) {
	return fileDescriptor_grpc_5b93556e8a9d6ed7, []int{0}
}
func (m *DispatcherEvent) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DispatcherEvent.Unmarshal(m, b)
}
func (m *DispatcherEvent) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DispatcherEvent.Marshal(b, m, deterministic)
}
func (dst *DispatcherEvent) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DispatcherEvent.Merge(dst, src)
}
func (m *DispatcherEvent) XXX_Size() int {
	return xxx_messageInfo_DispatcherEvent.Size(m)
}
func (m *DispatcherEvent) XXX_DiscardUnknown() {
	xxx_messageInfo_DispatcherEvent.DiscardUnknown(m)
}

var xxx_messageInfo_DispatcherEvent proto.InternalMessageInfo

type isDispatcherEvent_Data interface {
	isDispatcherEvent_Data()
}

type DispatcherEvent_Log struct {
	Log *LogRecord `protobuf:"bytes,2,opt,name=log,proto3,oneof"`
}
type DispatcherEvent_Job struct {
	Job *JobConfiguration `protobuf:"bytes,3,opt,name=job,proto3,oneof"`
}
type DispatcherEvent_Stats struct {
	Stats *StatsRequest `protobuf:"bytes,4,opt,name=stats,proto3,oneof"`
}

func (*DispatcherEvent_Log) isDispatcherEvent_Data()   {}
func (*DispatcherEvent_Job) isDispatcherEvent_Data()   {}
func (*DispatcherEvent_Stats) isDispatcherEvent_Data() {}

func (m *DispatcherEvent) GetData() isDispatcherEvent_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *DispatcherEvent) GetType() DispatcherEvent_Type {
	if m != nil {
		return m.Type
	}
	return DispatcherEvent_Subscribed
}

func (m *DispatcherEvent) GetLog() *LogRecord {
	if x, ok := m.GetData().(*DispatcherEvent_Log); ok {
		return x.Log
	}
	return nil
}

func (m *DispatcherEvent) GetJob() *JobConfiguration {
	if x, ok := m.GetData().(*DispatcherEvent_Job); ok {
		return x.Job
	}
	return nil
}

func (m *DispatcherEvent) GetStats() *StatsRequest {
	if x, ok := m.GetData().(*DispatcherEvent_Stats); ok {
		return x.Stats
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*DispatcherEvent) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _DispatcherEvent_OneofMarshaler, _DispatcherEvent_OneofUnmarshaler, _DispatcherEvent_OneofSizer, []interface{}{
		(*DispatcherEvent_Log)(nil),
		(*DispatcherEvent_Job)(nil),
		(*DispatcherEvent_Stats)(nil),
	}
}

func _DispatcherEvent_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*DispatcherEvent)
	// data
	switch x := m.Data.(type) {
	case *DispatcherEvent_Log:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Log); err != nil {
			return err
		}
	case *DispatcherEvent_Job:
		b.EncodeVarint(3<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Job); err != nil {
			return err
		}
	case *DispatcherEvent_Stats:
		b.EncodeVarint(4<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Stats); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("DispatcherEvent.Data has unexpected type %T", x)
	}
	return nil
}

func _DispatcherEvent_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*DispatcherEvent)
	switch tag {
	case 2: // data.log
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(LogRecord)
		err := b.DecodeMessage(msg)
		m.Data = &DispatcherEvent_Log{msg}
		return true, err
	case 3: // data.job
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(JobConfiguration)
		err := b.DecodeMessage(msg)
		m.Data = &DispatcherEvent_Job{msg}
		return true, err
	case 4: // data.stats
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(StatsRequest)
		err := b.DecodeMessage(msg)
		m.Data = &DispatcherEvent_Stats{msg}
		return true, err
	default:
		return false, nil
	}
}

func _DispatcherEvent_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*DispatcherEvent)
	// data
	switch x := m.Data.(type) {
	case *DispatcherEvent_Log:
		s := proto.Size(x.Log)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *DispatcherEvent_Job:
		s := proto.Size(x.Job)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *DispatcherEvent_Stats:
		s := proto.Size(x.Stats)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type ReplayerRegistration struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReplayerRegistration) Reset()         { *m = ReplayerRegistration{} }
func (m *ReplayerRegistration) String() string { return proto.CompactTextString(m) }
func (*ReplayerRegistration) ProtoMessage()    {}
func (*ReplayerRegistration) Descriptor() ([]byte, []int) {
	return fileDescriptor_grpc_5b93556e8a9d6ed7, []int{1}
}
func (m *ReplayerRegistration) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReplayerRegistration.Unmarshal(m, b)
}
func (m *ReplayerRegistration) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReplayerRegistration.Marshal(b, m, deterministic)
}
func (dst *ReplayerRegistration) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReplayerRegistration.Merge(dst, src)
}
func (m *ReplayerRegistration) XXX_Size() int {
	return xxx_messageInfo_ReplayerRegistration.Size(m)
}
func (m *ReplayerRegistration) XXX_DiscardUnknown() {
	xxx_messageInfo_ReplayerRegistration.DiscardUnknown(m)
}

var xxx_messageInfo_ReplayerRegistration proto.InternalMessageInfo

func (m *ReplayerRegistration) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type LogRecord struct {
	Url                  string            `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
	Method               string            `protobuf:"bytes,2,opt,name=method,proto3" json:"method,omitempty"`
	Header               map[string]string `protobuf:"bytes,3,rep,name=header,proto3" json:"header,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Body                 []byte            `protobuf:"bytes,8,opt,name=body,proto3" json:"body,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *LogRecord) Reset()         { *m = LogRecord{} }
func (m *LogRecord) String() string { return proto.CompactTextString(m) }
func (*LogRecord) ProtoMessage()    {}
func (*LogRecord) Descriptor() ([]byte, []int) {
	return fileDescriptor_grpc_5b93556e8a9d6ed7, []int{2}
}
func (m *LogRecord) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LogRecord.Unmarshal(m, b)
}
func (m *LogRecord) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LogRecord.Marshal(b, m, deterministic)
}
func (dst *LogRecord) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LogRecord.Merge(dst, src)
}
func (m *LogRecord) XXX_Size() int {
	return xxx_messageInfo_LogRecord.Size(m)
}
func (m *LogRecord) XXX_DiscardUnknown() {
	xxx_messageInfo_LogRecord.DiscardUnknown(m)
}

var xxx_messageInfo_LogRecord proto.InternalMessageInfo

func (m *LogRecord) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

func (m *LogRecord) GetMethod() string {
	if m != nil {
		return m.Method
	}
	return ""
}

func (m *LogRecord) GetHeader() map[string]string {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *LogRecord) GetBody() []byte {
	if m != nil {
		return m.Body
	}
	return nil
}

type JobConfiguration struct {
	Rate                 float32  `protobuf:"fixed32,1,opt,name=rate,proto3" json:"rate,omitempty"`
	Speed                float32  `protobuf:"fixed32,2,opt,name=speed,proto3" json:"speed,omitempty"`
	Begin                int64    `protobuf:"varint,3,opt,name=begin,proto3" json:"begin,omitempty"`
	End                  int64    `protobuf:"varint,4,opt,name=end,proto3" json:"end,omitempty"`
	Stuck                int64    `protobuf:"varint,5,opt,name=stuck,proto3" json:"stuck,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *JobConfiguration) Reset()         { *m = JobConfiguration{} }
func (m *JobConfiguration) String() string { return proto.CompactTextString(m) }
func (*JobConfiguration) ProtoMessage()    {}
func (*JobConfiguration) Descriptor() ([]byte, []int) {
	return fileDescriptor_grpc_5b93556e8a9d6ed7, []int{3}
}
func (m *JobConfiguration) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_JobConfiguration.Unmarshal(m, b)
}
func (m *JobConfiguration) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_JobConfiguration.Marshal(b, m, deterministic)
}
func (dst *JobConfiguration) XXX_Merge(src proto.Message) {
	xxx_messageInfo_JobConfiguration.Merge(dst, src)
}
func (m *JobConfiguration) XXX_Size() int {
	return xxx_messageInfo_JobConfiguration.Size(m)
}
func (m *JobConfiguration) XXX_DiscardUnknown() {
	xxx_messageInfo_JobConfiguration.DiscardUnknown(m)
}

var xxx_messageInfo_JobConfiguration proto.InternalMessageInfo

func (m *JobConfiguration) GetRate() float32 {
	if m != nil {
		return m.Rate
	}
	return 0
}

func (m *JobConfiguration) GetSpeed() float32 {
	if m != nil {
		return m.Speed
	}
	return 0
}

func (m *JobConfiguration) GetBegin() int64 {
	if m != nil {
		return m.Begin
	}
	return 0
}

func (m *JobConfiguration) GetEnd() int64 {
	if m != nil {
		return m.End
	}
	return 0
}

func (m *JobConfiguration) GetStuck() int64 {
	if m != nil {
		return m.Stuck
	}
	return 0
}

type StatsRequest struct {
	RequestId            int32    `protobuf:"varint,1,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
	RequestTime          int64    `protobuf:"varint,2,opt,name=request_time,json=requestTime,proto3" json:"request_time,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StatsRequest) Reset()         { *m = StatsRequest{} }
func (m *StatsRequest) String() string { return proto.CompactTextString(m) }
func (*StatsRequest) ProtoMessage()    {}
func (*StatsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_grpc_5b93556e8a9d6ed7, []int{4}
}
func (m *StatsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StatsRequest.Unmarshal(m, b)
}
func (m *StatsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StatsRequest.Marshal(b, m, deterministic)
}
func (dst *StatsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StatsRequest.Merge(dst, src)
}
func (m *StatsRequest) XXX_Size() int {
	return xxx_messageInfo_StatsRequest.Size(m)
}
func (m *StatsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_StatsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_StatsRequest proto.InternalMessageInfo

func (m *StatsRequest) GetRequestId() int32 {
	if m != nil {
		return m.RequestId
	}
	return 0
}

func (m *StatsRequest) GetRequestTime() int64 {
	if m != nil {
		return m.RequestTime
	}
	return 0
}

type StatsReport struct {
	ReplayerId           string                  `protobuf:"bytes,1,opt,name=replayer_id,json=replayerId,proto3" json:"replayer_id,omitempty"`
	RequestId            int32                   `protobuf:"varint,2,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
	ReportTime           int64                   `protobuf:"varint,3,opt,name=report_time,json=reportTime,proto3" json:"report_time,omitempty"`
	Stats                []*AttackerStatsWrapper `protobuf:"bytes,4,rep,name=stats,proto3" json:"stats,omitempty"`
	PerformanceStats     map[string]float64      `protobuf:"bytes,5,rep,name=performance_stats,json=performanceStats,proto3" json:"performance_stats,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"fixed64,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *StatsReport) Reset()         { *m = StatsReport{} }
func (m *StatsReport) String() string { return proto.CompactTextString(m) }
func (*StatsReport) ProtoMessage()    {}
func (*StatsReport) Descriptor() ([]byte, []int) {
	return fileDescriptor_grpc_5b93556e8a9d6ed7, []int{5}
}
func (m *StatsReport) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StatsReport.Unmarshal(m, b)
}
func (m *StatsReport) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StatsReport.Marshal(b, m, deterministic)
}
func (dst *StatsReport) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StatsReport.Merge(dst, src)
}
func (m *StatsReport) XXX_Size() int {
	return xxx_messageInfo_StatsReport.Size(m)
}
func (m *StatsReport) XXX_DiscardUnknown() {
	xxx_messageInfo_StatsReport.DiscardUnknown(m)
}

var xxx_messageInfo_StatsReport proto.InternalMessageInfo

func (m *StatsReport) GetReplayerId() string {
	if m != nil {
		return m.ReplayerId
	}
	return ""
}

func (m *StatsReport) GetRequestId() int32 {
	if m != nil {
		return m.RequestId
	}
	return 0
}

func (m *StatsReport) GetReportTime() int64 {
	if m != nil {
		return m.ReportTime
	}
	return 0
}

func (m *StatsReport) GetStats() []*AttackerStatsWrapper {
	if m != nil {
		return m.Stats
	}
	return nil
}

func (m *StatsReport) GetPerformanceStats() map[string]float64 {
	if m != nil {
		return m.PerformanceStats
	}
	return nil
}

type AttackerStatsWrapper struct {
	Name                 string           `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Requests             int64            `protobuf:"varint,2,opt,name=requests,proto3" json:"requests,omitempty"`
	Failures             int64            `protobuf:"varint,3,opt,name=failures,proto3" json:"failures,omitempty"`
	TotalResponseTime    int64            `protobuf:"varint,4,opt,name=total_response_time,json=totalResponseTime,proto3" json:"total_response_time,omitempty"`
	MinResponseTime      int64            `protobuf:"varint,5,opt,name=min_response_time,json=minResponseTime,proto3" json:"min_response_time,omitempty"`
	MaxResponseTime      int64            `protobuf:"varint,6,opt,name=max_response_time,json=maxResponseTime,proto3" json:"max_response_time,omitempty"`
	TrendSuccess         map[int64]int64  `protobuf:"bytes,7,rep,name=trend_success,json=trendSuccess,proto3" json:"trend_success,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	TrendFailures        map[int64]int64  `protobuf:"bytes,8,rep,name=trend_failures,json=trendFailures,proto3" json:"trend_failures,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	ResponseTimes        map[int64]int64  `protobuf:"bytes,9,rep,name=response_times,json=responseTimes,proto3" json:"response_times,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	FailureTimes         map[string]int64 `protobuf:"bytes,10,rep,name=failure_times,json=failureTimes,proto3" json:"failure_times,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	StartTime            int64            `protobuf:"varint,11,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	LastRequestTime      int64            `protobuf:"varint,12,opt,name=last_request_time,json=lastRequestTime,proto3" json:"last_request_time,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *AttackerStatsWrapper) Reset()         { *m = AttackerStatsWrapper{} }
func (m *AttackerStatsWrapper) String() string { return proto.CompactTextString(m) }
func (*AttackerStatsWrapper) ProtoMessage()    {}
func (*AttackerStatsWrapper) Descriptor() ([]byte, []int) {
	return fileDescriptor_grpc_5b93556e8a9d6ed7, []int{6}
}
func (m *AttackerStatsWrapper) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AttackerStatsWrapper.Unmarshal(m, b)
}
func (m *AttackerStatsWrapper) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AttackerStatsWrapper.Marshal(b, m, deterministic)
}
func (dst *AttackerStatsWrapper) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AttackerStatsWrapper.Merge(dst, src)
}
func (m *AttackerStatsWrapper) XXX_Size() int {
	return xxx_messageInfo_AttackerStatsWrapper.Size(m)
}
func (m *AttackerStatsWrapper) XXX_DiscardUnknown() {
	xxx_messageInfo_AttackerStatsWrapper.DiscardUnknown(m)
}

var xxx_messageInfo_AttackerStatsWrapper proto.InternalMessageInfo

func (m *AttackerStatsWrapper) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *AttackerStatsWrapper) GetRequests() int64 {
	if m != nil {
		return m.Requests
	}
	return 0
}

func (m *AttackerStatsWrapper) GetFailures() int64 {
	if m != nil {
		return m.Failures
	}
	return 0
}

func (m *AttackerStatsWrapper) GetTotalResponseTime() int64 {
	if m != nil {
		return m.TotalResponseTime
	}
	return 0
}

func (m *AttackerStatsWrapper) GetMinResponseTime() int64 {
	if m != nil {
		return m.MinResponseTime
	}
	return 0
}

func (m *AttackerStatsWrapper) GetMaxResponseTime() int64 {
	if m != nil {
		return m.MaxResponseTime
	}
	return 0
}

func (m *AttackerStatsWrapper) GetTrendSuccess() map[int64]int64 {
	if m != nil {
		return m.TrendSuccess
	}
	return nil
}

func (m *AttackerStatsWrapper) GetTrendFailures() map[int64]int64 {
	if m != nil {
		return m.TrendFailures
	}
	return nil
}

func (m *AttackerStatsWrapper) GetResponseTimes() map[int64]int64 {
	if m != nil {
		return m.ResponseTimes
	}
	return nil
}

func (m *AttackerStatsWrapper) GetFailureTimes() map[string]int64 {
	if m != nil {
		return m.FailureTimes
	}
	return nil
}

func (m *AttackerStatsWrapper) GetStartTime() int64 {
	if m != nil {
		return m.StartTime
	}
	return 0
}

func (m *AttackerStatsWrapper) GetLastRequestTime() int64 {
	if m != nil {
		return m.LastRequestTime
	}
	return 0
}

type ReportReturn struct {
	RequestId            int32    `protobuf:"varint,1,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReportReturn) Reset()         { *m = ReportReturn{} }
func (m *ReportReturn) String() string { return proto.CompactTextString(m) }
func (*ReportReturn) ProtoMessage()    {}
func (*ReportReturn) Descriptor() ([]byte, []int) {
	return fileDescriptor_grpc_5b93556e8a9d6ed7, []int{7}
}
func (m *ReportReturn) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReportReturn.Unmarshal(m, b)
}
func (m *ReportReturn) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReportReturn.Marshal(b, m, deterministic)
}
func (dst *ReportReturn) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReportReturn.Merge(dst, src)
}
func (m *ReportReturn) XXX_Size() int {
	return xxx_messageInfo_ReportReturn.Size(m)
}
func (m *ReportReturn) XXX_DiscardUnknown() {
	xxx_messageInfo_ReportReturn.DiscardUnknown(m)
}

var xxx_messageInfo_ReportReturn proto.InternalMessageInfo

func (m *ReportReturn) GetRequestId() int32 {
	if m != nil {
		return m.RequestId
	}
	return 0
}

func init() {
	proto.RegisterType((*DispatcherEvent)(nil), "dispatcher.DispatcherEvent")
	proto.RegisterType((*ReplayerRegistration)(nil), "dispatcher.ReplayerRegistration")
	proto.RegisterType((*LogRecord)(nil), "dispatcher.LogRecord")
	proto.RegisterMapType((map[string]string)(nil), "dispatcher.LogRecord.HeaderEntry")
	proto.RegisterType((*JobConfiguration)(nil), "dispatcher.JobConfiguration")
	proto.RegisterType((*StatsRequest)(nil), "dispatcher.StatsRequest")
	proto.RegisterType((*StatsReport)(nil), "dispatcher.StatsReport")
	proto.RegisterMapType((map[string]float64)(nil), "dispatcher.StatsReport.PerformanceStatsEntry")
	proto.RegisterType((*AttackerStatsWrapper)(nil), "dispatcher.AttackerStatsWrapper")
	proto.RegisterMapType((map[string]int64)(nil), "dispatcher.AttackerStatsWrapper.FailureTimesEntry")
	proto.RegisterMapType((map[int64]int64)(nil), "dispatcher.AttackerStatsWrapper.ResponseTimesEntry")
	proto.RegisterMapType((map[int64]int64)(nil), "dispatcher.AttackerStatsWrapper.TrendFailuresEntry")
	proto.RegisterMapType((map[int64]int64)(nil), "dispatcher.AttackerStatsWrapper.TrendSuccessEntry")
	proto.RegisterType((*ReportReturn)(nil), "dispatcher.ReportReturn")
	proto.RegisterEnum("dispatcher.DispatcherEvent_Type", DispatcherEvent_Type_name, DispatcherEvent_Type_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// HavokClient is the client API for Havok service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type HavokClient interface {
	Subscribe(ctx context.Context, in *ReplayerRegistration, opts ...grpc.CallOption) (Havok_SubscribeClient, error)
	Report(ctx context.Context, in *StatsReport, opts ...grpc.CallOption) (*ReportReturn, error)
}

type havokClient struct {
	cc *grpc.ClientConn
}

func NewHavokClient(cc *grpc.ClientConn) HavokClient {
	return &havokClient{cc}
}

func (c *havokClient) Subscribe(ctx context.Context, in *ReplayerRegistration, opts ...grpc.CallOption) (Havok_SubscribeClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Havok_serviceDesc.Streams[0], "/dispatcher.Havok/Subscribe", opts...)
	if err != nil {
		return nil, err
	}
	x := &havokSubscribeClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Havok_SubscribeClient interface {
	Recv() (*DispatcherEvent, error)
	grpc.ClientStream
}

type havokSubscribeClient struct {
	grpc.ClientStream
}

func (x *havokSubscribeClient) Recv() (*DispatcherEvent, error) {
	m := new(DispatcherEvent)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *havokClient) Report(ctx context.Context, in *StatsReport, opts ...grpc.CallOption) (*ReportReturn, error) {
	out := new(ReportReturn)
	err := c.cc.Invoke(ctx, "/dispatcher.Havok/Report", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// HavokServer is the server API for Havok service.
type HavokServer interface {
	Subscribe(*ReplayerRegistration, Havok_SubscribeServer) error
	Report(context.Context, *StatsReport) (*ReportReturn, error)
}

func RegisterHavokServer(s *grpc.Server, srv HavokServer) {
	s.RegisterService(&_Havok_serviceDesc, srv)
}

func _Havok_Subscribe_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(ReplayerRegistration)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(HavokServer).Subscribe(m, &havokSubscribeServer{stream})
}

type Havok_SubscribeServer interface {
	Send(*DispatcherEvent) error
	grpc.ServerStream
}

type havokSubscribeServer struct {
	grpc.ServerStream
}

func (x *havokSubscribeServer) Send(m *DispatcherEvent) error {
	return x.ServerStream.SendMsg(m)
}

func _Havok_Report_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StatsReport)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HavokServer).Report(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dispatcher.Havok/Report",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HavokServer).Report(ctx, req.(*StatsReport))
	}
	return interceptor(ctx, in, info, handler)
}

var _Havok_serviceDesc = grpc.ServiceDesc{
	ServiceName: "dispatcher.Havok",
	HandlerType: (*HavokServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Report",
			Handler:    _Havok_Report_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Subscribe",
			Handler:       _Havok_Subscribe_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "grpc.proto",
}

func init() { proto.RegisterFile("grpc.proto", fileDescriptor_grpc_5b93556e8a9d6ed7) }

var fileDescriptor_grpc_5b93556e8a9d6ed7 = []byte{
	// 944 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x56, 0xdd, 0x6e, 0x1b, 0x45,
	0x14, 0xce, 0x7a, 0x6d, 0xc7, 0x3e, 0xde, 0x26, 0xeb, 0xa9, 0x53, 0x56, 0x86, 0x82, 0xbb, 0x17,
	0x28, 0x20, 0xd5, 0x8a, 0x5c, 0x84, 0x28, 0x12, 0x2a, 0x90, 0xa6, 0x4a, 0x23, 0x04, 0xd1, 0x24,
	0x52, 0xa5, 0xde, 0x58, 0xb3, 0xbb, 0x13, 0x67, 0xeb, 0xf5, 0xce, 0x32, 0x33, 0x1b, 0xd5, 0xbc,
	0x00, 0x6f, 0xc0, 0x1b, 0xc0, 0x6b, 0x70, 0xc9, 0x6b, 0xa1, 0xf9, 0xb1, 0xb3, 0xfe, 0x81, 0xa4,
	0x77, 0x73, 0xce, 0xf9, 0xce, 0x77, 0xce, 0x9c, 0x9f, 0xd9, 0x05, 0x98, 0xf0, 0x22, 0x1e, 0x16,
	0x9c, 0x49, 0x86, 0x20, 0x49, 0x45, 0x41, 0x64, 0x7c, 0x4d, 0x79, 0xf8, 0xbb, 0x0b, 0xfb, 0x2f,
	0x97, 0xe2, 0xc9, 0x0d, 0xcd, 0x25, 0xfa, 0x0a, 0xea, 0x72, 0x5e, 0xd0, 0xc0, 0x19, 0x38, 0x87,
	0x7b, 0xa3, 0xc1, 0xf0, 0x16, 0x3e, 0x5c, 0x83, 0x0e, 0x2f, 0xe7, 0x05, 0xc5, 0x1a, 0x8d, 0xbe,
	0x00, 0x37, 0x63, 0x93, 0xa0, 0x36, 0x70, 0x0e, 0x3b, 0xa3, 0x83, 0xaa, 0xd3, 0x4f, 0x6c, 0x82,
	0x69, 0xcc, 0x78, 0x72, 0xba, 0x83, 0x15, 0x06, 0x1d, 0x81, 0xfb, 0x8e, 0x45, 0x81, 0xab, 0xa1,
	0x9f, 0x54, 0xa1, 0x67, 0x2c, 0x3a, 0x66, 0xf9, 0x55, 0x3a, 0x29, 0x39, 0x91, 0x29, 0xcb, 0x95,
	0xc7, 0x3b, 0x16, 0xa1, 0x23, 0x68, 0x08, 0x49, 0xa4, 0x08, 0xea, 0xda, 0x27, 0xa8, 0xfa, 0x5c,
	0x28, 0x03, 0xa6, 0xbf, 0x96, 0x54, 0xc8, 0xd3, 0x1d, 0x6c, 0x80, 0xe1, 0x5f, 0x0e, 0xd4, 0x55,
	0x76, 0x68, 0x0f, 0xe0, 0xa2, 0x8c, 0x44, 0xcc, 0xd3, 0x88, 0x26, 0xfe, 0x0e, 0xf2, 0xc1, 0x7b,
	0x99, 0x8a, 0x98, 0xe5, 0x39, 0x8d, 0x25, 0x4d, 0x7c, 0x07, 0xb5, 0xa0, 0x7e, 0x9e, 0xe6, 0x13,
	0xbf, 0x86, 0x1e, 0x40, 0x7b, 0x99, 0xac, 0x0f, 0xc8, 0x83, 0xd6, 0x19, 0x8b, 0x2e, 0x24, 0xe1,
	0xd2, 0xef, 0xa1, 0x0e, 0xec, 0x6a, 0x89, 0x15, 0xfe, 0x81, 0x42, 0x9e, 0xb1, 0xe8, 0x55, 0x9a,
	0xa7, 0xe2, 0xda, 0x7f, 0x84, 0x7a, 0xe0, 0xaf, 0xa7, 0xee, 0x3f, 0x46, 0x0f, 0x61, 0x5f, 0x27,
	0x77, 0xcc, 0xb2, 0x8c, 0xc6, 0x5a, 0xf9, 0xa9, 0xca, 0xe7, 0x97, 0x38, 0x2e, 0xf9, 0x09, 0xe7,
	0x8c, 0xfb, 0xf1, 0x8f, 0x4d, 0xa8, 0x27, 0x44, 0x92, 0xf0, 0x73, 0xe8, 0x61, 0x5a, 0x64, 0x64,
	0x4e, 0x39, 0xa6, 0x93, 0x54, 0x48, 0x43, 0x83, 0xf6, 0xa0, 0x96, 0x26, 0xba, 0x17, 0x6d, 0x5c,
	0x4b, 0x93, 0xf0, 0x6f, 0xa7, 0x92, 0x24, 0xf2, 0xc1, 0x2d, 0x79, 0x66, 0xcd, 0xea, 0x88, 0x1e,
	0x41, 0x73, 0x46, 0xe5, 0x35, 0x4b, 0x74, 0x2b, 0xda, 0xd8, 0x4a, 0xe8, 0x39, 0x34, 0xaf, 0x29,
	0x49, 0x28, 0x0f, 0xdc, 0x81, 0x7b, 0xd8, 0x19, 0x3d, 0xd9, 0xda, 0xa2, 0xe1, 0xa9, 0xc6, 0x9c,
	0xe4, 0x92, 0xcf, 0xb1, 0x75, 0x40, 0x08, 0xea, 0x11, 0x4b, 0xe6, 0x41, 0x6b, 0xe0, 0x1c, 0x7a,
	0x58, 0x9f, 0xfb, 0xcf, 0xa1, 0x53, 0x81, 0xaa, 0x3c, 0xa6, 0x74, 0xbe, 0xc8, 0x63, 0x4a, 0xe7,
	0xa8, 0x07, 0x8d, 0x1b, 0x92, 0x95, 0xd4, 0xa6, 0x61, 0x84, 0x6f, 0x6b, 0xdf, 0x38, 0xe1, 0x6f,
	0x9b, 0xc5, 0x52, 0x21, 0x38, 0x91, 0x66, 0xe6, 0x6a, 0x58, 0x9f, 0x15, 0x83, 0x28, 0x28, 0x35,
	0x17, 0xa9, 0x61, 0x23, 0x28, 0x6d, 0x44, 0x27, 0x69, 0xae, 0xc7, 0xc7, 0xc5, 0x46, 0x50, 0xf1,
	0x69, 0x9e, 0xe8, 0xf1, 0x70, 0xb1, 0x3a, 0x6a, 0x6f, 0x59, 0xc6, 0xd3, 0xa0, 0x61, 0x70, 0x5a,
	0x08, 0xcf, 0xc1, 0xab, 0xce, 0x0b, 0x7a, 0x0c, 0xc0, 0xcd, 0x71, 0x6c, 0xab, 0xdc, 0xc0, 0x6d,
	0xab, 0x79, 0x9d, 0xa0, 0x27, 0xe0, 0x2d, 0xcc, 0x32, 0x9d, 0x99, 0xbb, 0xb8, 0xb8, 0x63, 0x75,
	0x97, 0xe9, 0x8c, 0x86, 0xff, 0xd4, 0xa0, 0x63, 0x29, 0x0b, 0xc6, 0x25, 0xfa, 0x0c, 0x3a, 0xdc,
	0xf6, 0x71, 0xbc, 0x6c, 0x1c, 0x2c, 0x54, 0xaf, 0x93, 0xb5, 0x90, 0xb5, 0xf5, 0x90, 0xc6, 0x9f,
	0x71, 0x1b, 0xd1, 0xdc, 0x12, 0x8c, 0x4a, 0x05, 0x44, 0x5f, 0xdf, 0xee, 0x82, 0xea, 0xe3, 0xca,
	0x7e, 0xfe, 0x20, 0x25, 0x89, 0xa7, 0x94, 0xeb, 0x84, 0xde, 0x70, 0x52, 0x14, 0x94, 0xdb, 0x8d,
	0x40, 0x6f, 0xa1, 0x5b, 0x50, 0x7e, 0xc5, 0xf8, 0x8c, 0xe4, 0x31, 0x1d, 0x1b, 0x8e, 0x86, 0xe6,
	0x78, 0xba, 0x65, 0x9f, 0x54, 0xbc, 0xe1, 0xf9, 0xad, 0x83, 0x56, 0x9b, 0xb9, 0xf0, 0x8b, 0x35,
	0x75, 0xff, 0x18, 0x0e, 0xb6, 0x42, 0xef, 0x9a, 0x0b, 0xa7, 0x3a, 0x17, 0x7f, 0xee, 0x42, 0x6f,
	0xdb, 0x05, 0xd4, 0x70, 0xe4, 0x64, 0x46, 0x2d, 0x8b, 0x3e, 0xa3, 0x3e, 0xb4, 0x6c, 0xcd, 0x84,
	0xed, 0xca, 0x52, 0x56, 0xb6, 0x2b, 0x92, 0x66, 0x25, 0xa7, 0xc2, 0xd6, 0x6f, 0x29, 0xa3, 0x21,
	0x3c, 0x94, 0x4c, 0x92, 0x6c, 0xcc, 0xa9, 0x28, 0x58, 0x2e, 0xa8, 0x29, 0xb3, 0x19, 0x9c, 0xae,
	0x36, 0x61, 0x6b, 0xd1, 0xd5, 0xfe, 0x12, 0xba, 0xb3, 0x34, 0x5f, 0x43, 0x9b, 0x91, 0xda, 0x9f,
	0xa5, 0xf9, 0x06, 0x96, 0xbc, 0x5f, 0xc3, 0x36, 0x2d, 0x96, 0xbc, 0x5f, 0xc1, 0xbe, 0x81, 0x07,
	0x92, 0xd3, 0x3c, 0x19, 0x8b, 0x32, 0x8e, 0xa9, 0x10, 0xc1, 0xae, 0xee, 0xc4, 0xe8, 0xae, 0x6e,
	0x0e, 0x2f, 0x95, 0xd7, 0x85, 0x71, 0x32, 0xed, 0xf0, 0x64, 0x45, 0x85, 0xde, 0xc2, 0x9e, 0x21,
	0x5e, 0x96, 0xa0, 0xa5, 0x99, 0x9f, 0xdd, 0x8f, 0xf9, 0x95, 0xf5, 0x32, 0xd4, 0x26, 0xc7, 0x85,
	0x4e, 0x71, 0xaf, 0x5c, 0x4e, 0x04, 0xed, 0x7b, 0x72, 0x57, 0xef, 0xbe, 0xe0, 0xe6, 0x55, 0x9d,
	0x2a, 0x88, 0xcd, 0xd8, 0x52, 0xc3, 0x3d, 0x0b, 0x62, 0xb3, 0xab, 0x30, 0x7b, 0x57, 0x15, 0x95,
	0xda, 0x37, 0xa1, 0x9e, 0x70, 0xd3, 0x8e, 0x8e, 0x6e, 0x47, 0x5b, 0x6b, 0x16, 0x4d, 0xcb, 0x88,
	0x90, 0xe3, 0x95, 0x3d, 0xf7, 0x4c, 0xd3, 0x94, 0x01, 0xdf, 0xee, 0x7a, 0xff, 0x05, 0x74, 0x37,
	0xca, 0x5f, 0x1d, 0x71, 0x77, 0xcb, 0x88, 0xbb, 0x95, 0x11, 0xef, 0x7f, 0x0f, 0x68, 0xb3, 0xca,
	0x1f, 0xca, 0xb0, 0x59, 0xcb, 0x0f, 0x62, 0x78, 0x01, 0xdd, 0x8d, 0x92, 0xdd, 0xb5, 0xa7, 0x55,
	0x82, 0xf0, 0x29, 0x78, 0xe6, 0x79, 0xc0, 0x54, 0x96, 0x3c, 0xbf, 0xe3, 0x0d, 0x1d, 0xfd, 0xe1,
	0x40, 0xe3, 0x94, 0xdc, 0xb0, 0x29, 0xfa, 0x19, 0xda, 0xcb, 0x4f, 0x31, 0x5a, 0x79, 0xb7, 0xb6,
	0x7d, 0xf9, 0xfa, 0x1f, 0xff, 0xcf, 0x9f, 0x47, 0xb8, 0x73, 0xe4, 0xa0, 0xef, 0xa0, 0x69, 0x1f,
	0xdd, 0x8f, 0xfe, 0xe3, 0x01, 0xeb, 0x07, 0x6b, 0x51, 0x96, 0x59, 0x87, 0x3b, 0x51, 0x53, 0xff,
	0x0e, 0x3d, 0xfb, 0x37, 0x00, 0x00, 0xff, 0xff, 0x0f, 0x08, 0xed, 0x2b, 0x1c, 0x09, 0x00, 0x00,
}
